# frozen_string_literal: true

module Types
  class VulnerabilityDetailType < BaseUnion
    UnexpectedReportType = Class.new(StandardError)
    description 'Represents a vulnerability detail field. The fields with data will depend on the vulnerability detail type'

    graphql_name 'VulnerabilityDetail'

    possible_types VulnerabilityDetails::UrlType,
                   VulnerabilityDetails::IntType,
                   VulnerabilityDetails::ListType,
                   VulnerabilityDetails::CodeType,
                   VulnerabilityDetails::TextType,
                   VulnerabilityDetails::DiffType,
                   VulnerabilityDetails::TableType,
                   VulnerabilityDetails::CommitType,
                   VulnerabilityDetails::MarkdownType,
                   VulnerabilityDetails::FileLocationType,
                   VulnerabilityDetails::ModuleLocationType,
                   VulnerabilityDetails::BaseType

    def self.resolve_type(object, context)
      case object['type']
      when 'url'                then VulnerabilityDetails::UrlType
      when 'int'                then VulnerabilityDetails::IntType
      when 'code'               then VulnerabilityDetails::CodeType
      when 'text'               then VulnerabilityDetails::TextType
      when 'diff'               then VulnerabilityDetails::DiffType
      when 'table'              then VulnerabilityDetails::TableType
      when 'commit'             then VulnerabilityDetails::CommitType
      when 'markdown'           then VulnerabilityDetails::MarkdownType
      when 'file-location'      then VulnerabilityDetails::FileLocationType
      when 'module-location'    then VulnerabilityDetails::ModuleLocationType
      when 'list', 'named-list' then VulnerabilityDetails::ListType
      else                           VulnerabilityDetails::BaseType
      end
    end
  end
end
